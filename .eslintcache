[{"C:\\Users\\meeel\\Documents\\panda-shop\\src\\index.js":"1","C:\\Users\\meeel\\Documents\\panda-shop\\src\\reportWebVitals.js":"2","C:\\Users\\meeel\\Documents\\panda-shop\\src\\App.js":"3","C:\\Users\\meeel\\Documents\\panda-shop\\src\\context\\CartContext.js":"4","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\navbar\\navbar.js":"5","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemListContainer.js":"6","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemDetailContainer.js":"7","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\Order.js":"8","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\contacto\\contacto.js":"9","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\common\\NotFound.js":"10","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\Cart.js":"11","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\common\\GenericErrorHandler.js":"12","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\whatsapp\\whatsapp.js":"13","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\footer\\footer.js":"14","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemCount.js":"15","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemList.js":"16","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemDetail.js":"17","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\common\\Loading.js":"18","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\widgets\\CartWidget.js":"19","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\widgets\\CountWidget.js":"20","C:\\Users\\meeel\\Documents\\panda-shop\\src\\firebase\\index.js":"21","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\Item.js":"22"},{"size":500,"mtime":1613685262341,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2067,"mtime":1615397329263,"results":"26","hashOfConfig":"24"},{"size":2249,"mtime":1615401766512,"results":"27","hashOfConfig":"24"},{"size":2259,"mtime":1615404448908,"results":"28","hashOfConfig":"24"},{"size":271,"mtime":1614385368243,"results":"29","hashOfConfig":"24"},{"size":1341,"mtime":1614643678415,"results":"30","hashOfConfig":"24"},{"size":11827,"mtime":1616353892490,"results":"31","hashOfConfig":"24"},{"size":2762,"mtime":1614113445207,"results":"32","hashOfConfig":"24"},{"size":893,"mtime":1615403311933,"results":"33","hashOfConfig":"24"},{"size":5133,"mtime":1616353755536,"results":"34","hashOfConfig":"24"},{"size":431,"mtime":1615403000136,"results":"35","hashOfConfig":"24"},{"size":348,"mtime":1613950041830,"results":"36","hashOfConfig":"24"},{"size":1930,"mtime":1616354789353,"results":"37","hashOfConfig":"24"},{"size":1449,"mtime":1616353543414,"results":"38","hashOfConfig":"24"},{"size":1755,"mtime":1616353727419,"results":"39","hashOfConfig":"24"},{"size":2665,"mtime":1615399911004,"results":"40","hashOfConfig":"24"},{"size":457,"mtime":1615399496928,"results":"41","hashOfConfig":"24"},{"size":688,"mtime":1614176573539,"results":"42","hashOfConfig":"24"},{"size":1102,"mtime":1613948753776,"results":"43","hashOfConfig":"24"},{"size":997,"mtime":1614643678427,"results":"44","hashOfConfig":"24"},{"size":655,"mtime":1615399874523,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ytpjt0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},"C:\\Users\\meeel\\Documents\\panda-shop\\src\\index.js",[],["100","101"],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\reportWebVitals.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\App.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\context\\CartContext.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\navbar\\navbar.js",["102","103"],"import { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CartWidget from '../widgets/CartWidget';\r\nimport './navBar.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport { getCollection, getDocData, getFirestore } from '../../firebase';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\n\r\nconst request = new Promise((resolve, reject) => {\r\n  const db = getFirestore();\r\n  const categoryCollection = db.collection('categories');\r\n  categoryCollection.get().then(querySnapshot => {\r\n    if (querySnapshot.size === 0) {\r\n      console.warn('No hay categorias!');\r\n      resolve([]);\r\n    }\r\n    resolve(querySnapshot.docs.map(doc => getDocData(doc)));\r\n  });\r\n});\r\n\r\nconst NavbarComponent = () => {\r\n  const handleError = useErrorHandler();\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getCollection('categories').then(data => {\r\n      setCategories(data);\r\n    }).catch(error => {\r\n      handleError(error);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className=\"navBar\">\r\n      <Navbar.Brand href=\"#home\" variant=\"text-white\" as={Link} to={'/'} className=\"text-center\">\r\n        <img\r\n          src=\"/images/logo.png\"\r\n          width=\"50px\"\r\n          height=\"50px\"\r\n          className=\"d-inline-block align-top\"\r\n          alt=\"\"\r\n        />{' '}\r\n        Panda Shop</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"m-auto navLinks\">\r\n          <Nav.Link as={Link} to={'/'} className=\"hvr-underline-from-center\">Inicio</Nav.Link>\r\n          <NavDropdown title=\"Productos\" id=\"basic-nav-dropdown\">\r\n            {\r\n              categories.map(category => {\r\n                return <NavDropdown.Item key={category.id} as={Link} to={{ pathname: `/category/${category.title}`, state: { idCategory: category.id } }} >{category.title}</NavDropdown.Item>\r\n              })\r\n            }\r\n          </NavDropdown>\r\n          <Nav.Link as={Link} to={'/contacto'} className=\"hvr-underline-from-center\">Contacto</Nav.Link>\r\n        </Nav>\r\n        <CartWidget />\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n\r\n","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemListContainer.js",["104","105"],"import React, { useState } from 'react';\r\nimport ItemCount from './ItemCount';\r\nimport ItemList from './ItemList';\r\n\r\nconst ItemListContainer = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <ItemList />\r\n        </>\r\n    )\r\n\r\n}\r\nexport default ItemListContainer; ","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemDetailContainer.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\Order.js",["106","107","108"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useErrorHandler } from \"react-error-boundary\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport { getCollection, getFirestore } from \"../../firebase\";\r\nimport firebase from 'firebase/app';\r\nimport Loading from \"../common/Loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst Order = () => {\r\n    const errorHandler = useErrorHandler();\r\n    const history = useHistory();\r\n    const cartContext = useContext(CartContext);\r\n\r\n    const [customerInfo, setCustomerInfo] = useState({ firstName: '', lastName: '', email: '', address: '', city: '', state: '', zipCode: '', newsletter: true });\r\n    const [loading, setLoading] = useState(false);\r\n    const [modal, setModal] = useState({ show: false, title: '', body: '', closeHandler: () => { } });\r\n    const [order, setOrder] = useState({ id: null, buyer: null, items: null, date: null });\r\n\r\n    const [provincias, setProvincias] = useState([]);\r\n    const [localidades, setLocalidades] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://apis.datos.gob.ar/georef/api/provincias')\r\n            .then(res => {\r\n                if (res.ok) return res.json();\r\n            })\r\n            .then(data => {\r\n                setProvincias(data.provincias);\r\n            }).catch(error => {\r\n                errorHandler(error);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (customerInfo.state && customerInfo.state.trim().length > 0) {\r\n            fetch(`https://apis.datos.gob.ar/georef/api/localidades?provincia=${customerInfo.state}`)\r\n                .then(res => {\r\n                    if (res.ok) return res.json();\r\n                }).then(data => {\r\n                    setLocalidades(data.localidades);\r\n                }).catch(error => {\r\n                    errorHandler(error);\r\n                });\r\n        }\r\n    }, [customerInfo.state])\r\n\r\n    const handleBuyerFormInput = (evt) => {\r\n        const { id, value: elemValue, type } = evt.target;\r\n\r\n        if (id.includes('input')) {\r\n            let prop = id.replace('input', '');\r\n            prop = prop[0].toLowerCase() + prop.slice(1, prop.length);\r\n\r\n            let value = elemValue;\r\n            if (type === 'checkbox') {\r\n                value = evt.target.checked;\r\n            }\r\n\r\n            setCustomerInfo((buyer) => {\r\n                return { ...buyer, [prop]: value };\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const makeOrder = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const db = getFirestore();\r\n        const ordersCollection = db.collection('orders');\r\n        const newOrder = {\r\n            buyer: customerInfo,\r\n            items: cartContext.cart.map(item => {\r\n                return { id: item.item.id, title: item.item.title, price: item.item.price, quantity: item.quantity };\r\n            }),\r\n            date: firebase.firestore.FieldValue.serverTimestamp(),\r\n            total: cartContext.getTotal()\r\n        }\r\n\r\n        setLoading(true);\r\n        const products = getCollection('products');\r\n        products.then(products => {\r\n            const itemsToUpdate = [];\r\n            const itemsToDelete = [];\r\n\r\n            cartContext.cart.forEach(item => {\r\n                const product = products.find(p => p.id === item.item.id);\r\n                if (product) {\r\n                    if (product.price !== item.item.price) {\r\n                        itemsToUpdate.push({ item: product, quantity: item.quantity });\r\n                    }\r\n                } else {\r\n                    itemsToDelete.push(item);\r\n                }\r\n            });\r\n\r\n            itemsToUpdate.forEach(item => {\r\n                cartContext.addItem(item.item, item.quantity);\r\n            });\r\n\r\n            itemsToDelete.forEach(item => {\r\n                cartContext.removeItem(item.item.id);\r\n            });\r\n        }).then(() => {\r\n            setLoading(true);\r\n            ordersCollection.add(newOrder).then(({ id }) => {\r\n                setOrder({ ...newOrder, id });\r\n                cartContext.clear();\r\n                setModal({\r\n                    show: true,\r\n                    title: '¡Su orden se realizado correctamente!',\r\n                    body: `Se ha generado su orden con identificacion ${id}`,\r\n                    closeHandler: () => {\r\n                        history.push('/');\r\n                    }\r\n                });\r\n            }).catch(error => {\r\n                errorHandler(error);\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }).catch(error => {\r\n            if (error instanceof Error) {\r\n\r\n            }\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loading />}\r\n            {!loading &&\r\n                <>\r\n                    {!order.id &&\r\n                        <div className=\"container p-2\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <form id=\"buyerForm\" onSubmit={makeOrder}>\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"col\">\r\n                                                <label htmlFor=\"inputFirstName\">Nombre</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"inputFirstName\" placeholder=\"Nombre\" onChange={handleBuyerFormInput}  required/>\r\n                                            </div>\r\n                                            <div className=\"col\">\r\n                                                <label htmlFor=\"inputLastName\">Apellido</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"inputLastName\" placeholder=\"Apellido\" onChange={handleBuyerFormInput} required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label htmlFor=\"inputEmail\">Email</label>\r\n                                            <input type=\"email\" className=\"form-control\" id=\"inputEmail\" placeholder=\"Email\" onChange={handleBuyerFormInput} required />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"inputAddress\">Direccion</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Dirección\" onChange={handleBuyerFormInput} required />\r\n                                            <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Piso\" onChange={handleBuyerFormInput} required />\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"form-group col-sm-4\">\r\n                                                <label htmlFor=\"inputState\">Provincia</label>\r\n                                                <select id=\"inputState\" className=\"form-control\" onChange={handleBuyerFormInput} required>\r\n                                                    <option value=''>Seleccionar provincia</option>\r\n                                                    {provincias && provincias.map(provincia => {\r\n                                                        return <option key={provincia.id} value={provincia.id}>{provincia.nombre}</option>;\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-group col-sm-5\">\r\n                                                <label htmlFor=\"inputCity\">Localidad</label>\r\n                                                <select id=\"inputCity\" className=\"form-control\" onChange={handleBuyerFormInput} required>\r\n                                                    <option value=''>Seleccionar localidad</option>\r\n                                                    {localidades && localidades.map(provincia => {\r\n                                                        return <option key={provincia.id} value={provincia.id}>{provincia.nombre}</option>;\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-group col-sm-3\">\r\n                                                <label htmlFor=\"inputZipCode\">Codigo postal</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"inputZipCode\" onChange={handleBuyerFormInput} required />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"inputNewsletter\" onChange={handleBuyerFormInput} />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inputNewsletter\">\r\n                                                    Quiero recibir notificaciones de novedades y descuentos\r\n                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn button2 btn-block\">Finalizar compra</button>\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-sm-6\">\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">\r\n                                            <b>Resumen de compra</b>\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <p>Productos ({cartContext.cart.length}) <span className=\"float-right\">$ {cartContext.getTotal()}</span></p>\r\n                                            <p>Envio <span className=\"float-right\">Gratis</span></p>\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <p>Total <span className=\"float-right\">$ {cartContext.getTotal()}</span></p>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n            <Modal show={modal.show} onHide={modal.closeHandler} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{modal.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{modal.body}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btn button2\" onClick={modal.closeHandler}>\r\n                        Continuar\r\n                            </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Order;","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\contacto\\contacto.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\common\\NotFound.js",["109","110","111"],"import { Col, Container, Image, Jumbotron, Row } from \"react-bootstrap\"\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst NotFound = () => {\r\n    const location = useLocation();\r\n    return (\r\n        <>\r\n            <Container className=\"mt-4\">\r\n                <Jumbotron className=\"red-panda-color\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3\">\r\n                            <img src=\"/images/logo2.png\" alt=\"\" width=\"200px\" height=\"200px\" />\r\n                        </div>\r\n                        <div className=\"col-sm-9\">\r\n                            <h1>La página no existe</h1>\r\n                            <h2>No existe la página {location.pathname}</h2>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotFound;","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\Cart.js",["112","113","114"],"import { useContext, useRef } from \"react\";\r\nimport {Container, Jumbotron } from \"react-bootstrap\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CartContext } from '../../context/CartContext';\r\nimport CountWidget from \"../widgets/CountWidget\";\r\n \r\n\r\nconst CartContainer = () => {\r\n    const cartContext = useContext(CartContext);\r\n    const itemContainerRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const onCartClear = () => {\r\n        cartContext.clear();\r\n    }\r\n\r\n    const onItemRemove = (evt) => {\r\n        const id = evt.target.closest('tr').id;\r\n        cartContext.removeItem(id);\r\n    }\r\n\r\n    const onItemQuantityChange = (evt) => {\r\n        const id = itemContainerRef.current.id;\r\n        const quantity = evt.target.value;\r\n        cartContext.changeItemQuantity(id, quantity);\r\n    }\r\n\r\n    const onCountChange = (count) => {\r\n        const id = itemContainerRef.current.id;\r\n        const quantity = count;\r\n        cartContext.changeItemQuantity(id, quantity);\r\n    }\r\n\r\n    const goToOrder = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        history.push('/order');\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {(cartContext.cart && cartContext.cart.length > 0) && (\r\n                <>\r\n                    <button className=\"btn button-2\" onClick={onCartClear}><FaTrash /></button>\r\n                    <Container>\r\n                        <table className=\"table text-center\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Producto</th>\r\n                                    <th>Nombre</th>\r\n                                    <th>Cantidad</th>\r\n                                    <th>Precio</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cartContext.cart.map(item => {\r\n                                    return (\r\n                                        <tr key={item.item.id} id={item.item.id} className=\"\">\r\n                                            <td>\r\n                                                <img src={'/images/' + item.item.pictureUrl} alt={item.item.description} width=\"75px\" height=\"75px\" />\r\n                                            </td>\r\n                                            <td className=\"align-middle-center\">\r\n                                                <h5>{item.item.title}</h5>\r\n                                            </td>\r\n                                            <td className=\"align-middle-center\">\r\n                                                <h4>{item.quantity}</h4>\r\n                                            </td>\r\n                                            <td className=\"align-middle-center\">\r\n                                                <h4>${item.item.price * item.quantity}</h4>\r\n                                            </td>\r\n                                            <td className=\"d-flex align-items-center\">\r\n                                                <button className=\"mr-2 button-as-link\" onClick={onItemRemove}>Eliminar</button>\r\n                                                <Link to={{ pathname: `/category/${item.item.idCategory}`, state: { idCategory: item.item.idCategory } }}>\r\n                                                    <button className=\"mr-2 button-as-link\">Más productos similares</button>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 offset-sm-10\">\r\n                                <h4>\r\n                                    Total: ${\r\n                                        cartContext.cart.reduce((acum, item) => {\r\n                                            acum += item.quantity * item.item.price;\r\n                                            return acum;\r\n                                        }, 0)\r\n                                    }\r\n                                </h4>\r\n                                <button className=\"btn button2 btn-block\" onClick={goToOrder}>Comprar</button>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </>\r\n            )}\r\n            {(!cartContext.cart || cartContext.cart.length === 0) && (\r\n                <>\r\n                    <Jumbotron className=\"mt-5\">\r\n                        <h1>No hay items en el carrito</h1>\r\n                        <Link to={'/'}>\r\n                            <button className=\" btn button2\">Seguir comprando</button>\r\n                        </Link>\r\n                    </Jumbotron>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartContainer;","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\common\\GenericErrorHandler.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\whatsapp\\whatsapp.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\footer\\footer.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemCount.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemList.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\ItemDetail.js",["115"],"import { useContext, useState } from \"react\";\r\nimport ItemCount from \"./ItemCount\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\n\r\nconst ItemDetail = ({ product }) => {\r\n    const [count, setCount] = useState(0);\r\n    const cartContext = useContext(CartContext);\r\n    const history = useHistory();\r\n\r\n    const onAdd = (count) => {\r\n        setCount(count);\r\n    }\r\n\r\n    const addToCart = () => {\r\n        try {\r\n            cartContext.addItem(product, count);\r\n            history.push(\"/cart\");\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    const mostrarAlerta = () => {\r\n        SweetAlert(\"Producto agregado al carrito\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid w-100\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8 p-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <img src={\"/images/\" + product.pictureUrl} alt={product.title} className=\"mw-100\" width=\"300px\" height=\"300px\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-12\">\r\n                                <h4 className=\"text-center\">{product.description}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <h1>{product.title}</h1>\r\n                        <h2>${product.price}</h2>\r\n                        {count === 0 &&\r\n                            <ItemCount stock={product.stock} initial={1} onAdd={onAdd} />\r\n                        }\r\n                        {count > 0 &&\r\n                            <>\r\n\r\n                                <p>Ha seleccionado {count} item(s) de este producto</p>\r\n                                <Link to={'/'}>\r\n                                    <button type=\"button\" className=\"btn button2\" onClick={addToCart}>Seguir comprando</button>\r\n                                </Link>\r\n                                <Link to=\"/cart\">\r\n                                    <button type=\"button\" className=\"btn button2\" onClick={addToCart} >Finalizar compra</button>\r\n\r\n                                </Link>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemDetail;","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\common\\Loading.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\widgets\\CartWidget.js",["116"],"import { useContext } from \"react\";\r\nimport { Badge, Nav } from \"react-bootstrap\";\r\nimport { FaTwitter, FaShoppingCart } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from '../../context/CartContext';\r\n\r\nconst Cart = () => {\r\n    const { cart } = useContext(CartContext);\r\n    return (\r\n        <Nav>\r\n            <Nav.Link as={Link} to={\"/cart\"}><FaShoppingCart size={30} />{cart && cart.length > 0 && (\r\n                <Badge>{cart.reduce((acum, item) => {\r\n                    acum += item.quantity;\r\n                    return acum;\r\n                }, 0)}</Badge>\r\n            )}</Nav.Link>\r\n        </Nav>\r\n    )\r\n}\r\nexport default Cart; ","C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\widgets\\CountWidget.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\firebase\\index.js",[],"C:\\Users\\meeel\\Documents\\panda-shop\\src\\components\\containers\\Item.js",["117","118","119"],"import { useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './item.scss';\r\nimport ItemDetail from './ItemDetail';\r\n\r\nconst Item = ({ product }) => {\r\n    return (\r\n        <>\r\n            <Link to={`/item/${product.id}`}>\r\n                <div className=\"item-container text-center p-2\">\r\n                    <img src={\"/images/\" + product.pictureUrl} alt={product.title} width=\"250px\" height=\"250px\" />\r\n                    <h4>{product.title}</h4>\r\n                    <h2>${product.price}</h2>\r\n                </div>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item;",["120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":9,"column":7,"nodeType":"128","messageId":"129","endLine":9,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":31,"column":6,"nodeType":"132","endLine":31,"endColumn":8,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":17},{"ruleId":"126","severity":1,"message":"136","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":16},{"ruleId":"130","severity":1,"message":"137","line":34,"column":8,"nodeType":"132","endLine":34,"endColumn":10,"suggestions":"138"},{"ruleId":"130","severity":1,"message":"137","line":47,"column":8,"nodeType":"132","endLine":47,"endColumn":28,"suggestions":"139"},{"ruleId":"126","severity":1,"message":"140","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"141","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":31},{"ruleId":"126","severity":1,"message":"142","line":1,"column":44,"nodeType":"128","messageId":"129","endLine":1,"endColumn":47},{"ruleId":"126","severity":1,"message":"143","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":19},{"ruleId":"126","severity":1,"message":"144","line":23,"column":11,"nodeType":"128","messageId":"129","endLine":23,"endColumn":31},{"ruleId":"126","severity":1,"message":"145","line":29,"column":11,"nodeType":"128","messageId":"129","endLine":29,"endColumn":24},{"ruleId":"126","severity":1,"message":"146","line":26,"column":11,"nodeType":"128","messageId":"129","endLine":26,"endColumn":24},{"ruleId":"126","severity":1,"message":"147","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":19},{"ruleId":"126","severity":1,"message":"134","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":18},{"ruleId":"126","severity":1,"message":"148","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":15},{"ruleId":"126","severity":1,"message":"149","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"122","replacedBy":"150"},{"ruleId":"124","replacedBy":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'request' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleError'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'useState' is defined but never used.","'ItemCount' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.",["155"],["156"],"'Col' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","'CountWidget' is defined but never used.","'onItemQuantityChange' is assigned a value but never used.","'onCountChange' is assigned a value but never used.","'mostrarAlerta' is assigned a value but never used.","'FaTwitter' is defined but never used.","'Modal' is defined but never used.","'ItemDetail' is defined but never used.",["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [handleError]",{"range":"163","text":"164"},"Update the dependencies array to be: [errorHandler]",{"range":"165","text":"166"},"Update the dependencies array to be: [customerInfo.state, errorHandler]",{"range":"167","text":"168"},[1026,1028],"[handleError]",[1456,1458],"[errorHandler]",[1957,1977],"[customerInfo.state, errorHandler]"]